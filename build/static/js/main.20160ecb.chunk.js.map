{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Customer/Customer.jsx","components/Customer/CustomerInfo/CustomerInfo.jsx","components/Customer/CustomerOrder/CustomerOrder.jsx","components/Checkout/Checkout.jsx","components/OrderItem/OrderItem.jsx","components/Admin/Admin.jsx","components/PizzaItem/PizzaItem.jsx","components/SelectPizzas/SelectPizzas.jsx","components/Home/Home.jsx","components/App/App.js","components/redux/reducers/selectedPizzas.reducer.js","components/redux/reducers/customer.reducer.js","components/redux/reducers/displayTotal.reducer.js","index.js"],"names":["theme","createMuiTheme","palette","secondary","main","Navbar","navbarHtml","total","pizzas","this","props","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pizza","value","parseFloat","price","err","return","displayTotal","react_default","a","createElement","Grid_default","xs","Typography_default","className","variant","color","MuiThemeProvider_default","HashRouter","AppBar_default","position","Toolbar_default","Link","to","Component","connect","store","selectedPizzas","customerInfoObject","customer_name","street_address","city","zip","type","Customer","state","clearCustomerInfoFields","_this","setState","handleChange","event","Object","defineProperty","target","name","handleSubmit","preventDefault","dispatch","payload","history","push","onSubmit","onChange","placeholder","checked","CustomerInfo","customer","reduxStore","CustomerOrder","map","item","key","id","Checkout","checkout","data","console","log","axios","post","then","res","catch","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Customer_CustomerInfo_CustomerInfo","Customer_CustomerOrder_CustomerOrder","onClick","withRouter","OrderItem","order","time","Admin","orders","refreshData","_this2","get","response","orderhHtml","components_OrderItem_OrderItem","PizzaItem","selected","addItem","deleteItem","button","Button_default","size","details","Card_default","CardActionArea_default","CardMedia_default","image","image_path","title","CardContent_default","gutterBottom","component","description","CardActions_default","SelectPizzas","getPizzas","handleNext","components_PizzaItem_PizzaItem","Home","components_SelectPizzas_SelectPizzas","App","components_Navbar_Navbar","Route","path","exact","arguments","length","action","alert","toConsumableArray","concat","filter","storeInstance","createStore","combineReducers","applyMiddleware","logger","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.20160ecb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport {HashRouter as Router, Link} from 'react-router-dom';\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#ffffff'\n    }\n  }\n});\n\nclass Navbar extends Component {\n\n    render() {\n        // calculate total\n        let total = 0;\n        let pizzas = this.props.pizzas;\n        for (const pizza of pizzas) {\n            total = total + parseFloat(pizza.price);\n        }\n        // conditional render\n        let navbarHtml;\n        if (this.props.displayTotal) {\n            navbarHtml =\n            <Grid xs={2}>\n                <Typography className=\"total\" variant=\"h6\" color=\"inherit\">\n                Total: {total}\n                </Typography>\n            </Grid>\n        }\n        return (\n              <MuiThemeProvider theme={theme}>\n            <Router>\n                <AppBar className=\"navbar\" position=\"static\" color=\"primary\">\n                    <Toolbar>\n                        <Grid xs={10}>\n                          <Link to='/'>\n                            <Typography variant=\"h6\" color=\"secondary\">\n                              Prime Pizza\n                            </Typography>\n                          </Link>\n                        </Grid>\n                          {navbarHtml}\n                    </Toolbar>\n                </AppBar>\n          </Router>\n              </MuiThemeProvider>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        pizzas: store.selectedPizzas,\n        displayTotal: store.displayTotal\n    }\n}\n\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\nimport './Customer.css';\nimport { connect } from 'react-redux';\n\nconst customerInfoObject = {\n  customer_name: '',\n  street_address: '',\n  city: '',\n  zip: '',\n  type: ''\n}\n\nclass Customer extends Component {\n  state = customerInfoObject;\n\n  clearCustomerInfoFields = () => {\n    this.setState(customerInfoObject);\n  }\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'SET_DISPLAY', payload: true });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.dispatch({ type: 'ADD_CUSTOMER', payload: this.state });\n    this.clearCustomerInfoFields();\n    this.props.history.push('/checkout');\n  }\n\n  render() {\n    return (\n      <div className=\"customerForm\">\n        <h2>Step 2: Customer Information</h2>\n        <form className=\"customerInfo\" onSubmit={this.handleSubmit}>\n          <div>\n            <input onChange={this.handleChange} type=\"text\" placeholder=\"name\" name=\"customer_name\" value={this.state.customer_name} />\n            <input onChange={this.handleChange} type=\"text\" placeholder=\"Street Address\" name=\"street_address\" value={this.state.street_address} />\n            <input onChange={this.handleChange} type=\"text\" placeholder=\"City, State\" name=\"city\" value={this.state.city} />\n            <input onChange={this.handleChange} type=\"number\" placeholder=\"Zip\" name=\"zip\" value={this.state.zip} />\n          </div>\n          <div>\n            <div>\n              <label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"radio\"\n                  value=\"pickup\"\n                  checked={this.state.type === \"pickup\"}\n                  name=\"type\"\n                />\n                Pickup</label>\n            </div>\n            <div>\n              <label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"radio\"\n                  value=\"delivery\"\n                  checked={this.state.type === \"delivery\"}\n                  name=\"type\"\n                />\n                Delivery</label>\n            </div>\n            <button>NEXT</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Customer);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CustomerInfo extends Component {\n  render() {\n\n    let customerDetails;\n    if (this.props.customer) {\n      customerDetails = <div className=\"customerInfo\">\n        <div className=\"customerDetails\">\n          <p>{this.props.customer.customer_name}</p>\n          <p>{this.props.customer.street_address}</p>\n          <p>{this.props.customer.city} {this.props.customer.zip}</p>\n        </div>\n        <div className=\"cutomerType\">\n          {this.props.customer.type ?\n            <p>For {this.props.customer.type}</p> :\n            null}\n        </div>\n      </div>;\n    } else {\n      customerDetails = null;\n    }\n    return (\n      customerDetails\n    );\n  }\n}\n\nconst mapStateToProps = (reduxStore) => {\n  return {\n    customer: reduxStore.customer\n  }\n}\n\nexport default connect(mapStateToProps)(CustomerInfo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CustomerOrder extends Component {\n    render() {\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Cost</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.reduxStore.selectedPizzas.map( item => {\n                        return <tr key={item.id}>\n                                    <td>{item.name}</td>\n                                    <td>{item.price}</td>\n                                </tr>\n                    } ) }\n                </tbody>\n            </table>\n        )\n    }\n}\n\nconst mapReduxStateToProps = (reduxStore) => {\n    //this makes this.props.reduxStore\n    return {\n        reduxStore\n    }\n}\n\nexport default connect(mapReduxStateToProps)(CustomerOrder);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport CustomerInfo from '../Customer/CustomerInfo/CustomerInfo';\nimport CustomerOrder from '../Customer/CustomerOrder/CustomerOrder';\n\nclass Checkout extends Component {\n    checkout = () => {\n        const customer = this.props.reduxStore.customer;\n        const pizzas = this.props.reduxStore.selectedPizzas;\n        let total = 0;\n        for (const pizza of pizzas) {\n            total = total + parseFloat(pizza.price);\n        }\n        let data = {\n            customer_name: customer.customer_name,\n            street_address: customer.street_address,\n            city: customer.city,\n            zip: customer.zip,\n            type: customer.type,\n            total: total,\n            pizzas: pizzas\n        }\n        console.log(data);\n        \n        \n        axios.post('/api/order', data)\n        .then( res => {\n            this.props.dispatch({ type: 'CLEAR_INFO' })\n            this.props.history.push('/');\n        }).catch( err => {\n            console.log('error in post:', err );\n        })\n    }\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'SET_DISPLAY', payload: false })\n    }\n\n    render() {\n        const pizzas = this.props.reduxStore.selectedPizzas;\n        let total = 0;\n        for (const pizza of pizzas) {\n            total = total + parseFloat(pizza.price);\n        }\n        return (\n            <div>\n                <h2>Step 3: Checkout</h2>\n                <CustomerInfo />\n                <CustomerOrder />\n                <button onClick={this.checkout}>Checkout</button>\n                {total}\n            </div>\n        );\n    }\n}\n\nconst mapReduxStateToProps = (reduxStore) => {\n    //this makes this.props.reduxStore\n    return {\n        reduxStore\n    }\n}\n\nexport default connect(mapReduxStateToProps)(withRouter(Checkout));\n","import React, { Component } from 'react';\n\nclass OrderItem extends Component {\n\n    render() {\n        let order = this.props.order;\n        return (\n            <tr>\n                <td>{order.customer_name}</td>\n                <td>{order.time}</td>\n                <td>{order.type}</td>\n                <td>{order.total}</td>\n            </tr>\n        );\n    }\n}\n\n\nexport default OrderItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport OrderItem from '../OrderItem/OrderItem';\n\nclass Admin extends Component {\n\n  state = {\n    orders: []\n  }\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'SET_DISPLAY', payload: false })\n    this.refreshData();\n  }\n\n\n  refreshData() {\n    axios.get('/api/order').then((response) => {\n      this.setState({\n        orders: response.data\n      });\n    });\n  }\n\n\n  render() {\n    let orderhHtml = this.state.orders.map((order) => {\n      return <OrderItem key={order.id} order={order}/>;\n    })\n    return (\n      <div>\n        <h1>Orders</h1>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Time Order Placed</th>\n              <th>Type</th>\n              <th>Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orderhHtml}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n\nexport default connect()(Admin);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './PizzaItem.css'\nclass PizzaItem extends Component {\n    state = {\n        selected: false\n    }\n    addItem = (pizza) => {\n        console.log('worked');\n\n        this.setState({\n            selected: true\n        })\n        this.props.dispatch({ type: 'SELECT_PIZZA', payload: pizza })\n    }\n    deleteItem = (pizza) => {\n        this.setState({\n            selected: false\n        })\n        this.props.dispatch({ type: 'DELETE_PIZZA', payload: pizza })\n    }\n\n    render() {\n        let button;\n        if (this.state.selected) {\n            button = \n            <Button size=\"large\"variant=\"contained\" color=\"secondary\" onClick={() => this.deleteItem(this.props.details)}>\n                Remove\n            </Button>\n        }\n        else {\n            button = \n            <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={() => this.addItem(this.props.details)}>\n                Add\n            </Button>\n        }\n        return (\n            <Card className='card'>\n                <CardActionArea>\n                    <CardMedia\n                        className=\"media\"\n                        image={this.props.details.image_path}\n                        title=\"pizza\"\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {this.props.details.name}\n                        </Typography>\n                        <Typography component=\"p\">\n                            {this.props.details.description}\n                        </Typography>\n                        <Typography component=\"p\">\n                            price: {this.props.details.price}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    {button}\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nconst mapReduxStateToProps = (reduxStore) => {\n    //this makes this.props.reduxStore\n    return {\n        reduxStore\n    }\n}\n\nexport default connect(mapReduxStateToProps)(PizzaItem);","import React, { Component } from 'react';\nimport PizzaItem from '../PizzaItem/PizzaItem';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport './SelectPizzas.css';\n\nclass SelectPizzas extends Component {\n\n    state = {\n        pizzas: []\n    }\n    getPizzas = () => {\n        axios.get('/api/pizza')\n        .then( res => {\n            this.setState({\n                pizzas: res.data\n            })\n        })\n    }\n    handleNext = () => {\n        this.props.history.push('/customer');\n    } \n   \n    componentDidMount() {\n        this.getPizzas();\n    }\n\n    render() {\n        const pizzas = this.state.pizzas.map((pizza) => {\n            return <PizzaItem key={pizza.id} details={pizza} />\n        })\n\n        return (\n            <div>\n                <div className='pizzaContainer'>{pizzas}</div>\n                <div>\n                    <Button size=\"large\" variant=\"contained\" color=\"default\" onClick={this.handleNext}>\n                        Next\n                    </Button>\n                </div>\n            </div>\n            \n            \n        )\n    }\n}\n\nconst mapReduxStateToProps = (reduxStore) => {\n    //this makes this.props.reduxStore\n    return {\n        reduxStore\n    }\n}\n\nexport default connect(mapReduxStateToProps)(withRouter(SelectPizzas));","import React, { Component } from 'react';\nimport SelectPizzas from '../SelectPizzas/SelectPizzas';\nimport { connect } from 'react-redux';\nclass Home extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({type: 'SET_DISPLAY', payload: true})\n    }\n    render() {\n        return (\n            <SelectPizzas />\n        )\n    }\n}\n\nconst mapReduxStateToProps = (reduxStore) => {\n    //this makes this.props.reduxStore\n    return {\n        reduxStore\n    }\n}\n\nexport default connect(mapReduxStateToProps)(Home);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from '../Navbar/Navbar';\nimport Customer from '../Customer/Customer';\nimport Checkout from '../Checkout/Checkout';\nimport Admin from '../Admin/Admin';\nimport Home from '../Home/Home';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar/>\n          <br/>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/customer\" component={Customer}></Route>\n          <Route path=\"/checkout\" component={Checkout}></Route>\n          <Route path=\"/admin\" component={Admin}></Route>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const selectedPizzas = ( state = [], action ) => {\n    switch( action.type ) {\n        case 'SELECT_PIZZA':\n            for (let pizza of state) {\n                if(action.payload.id === pizza.id) {\n                    alert('you can only have one of the same kind of pizza per order');\n                    return state;\n                }\n            }\n            return [...state, action.payload];\n        case 'DELETE_PIZZA':\n            return state.filter( (item) => {return item.id !== action.payload.id \n            })\n        case 'CLEAR_INFO':\n            return []\n        default:\n            return state;\n    }\n}\n\nexport default selectedPizzas;","const customer = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_CUSTOMER':\n          return action.payload;;\n    case 'CLEAR_INFO':\n        return []\n    default:\n      return state;\n  }\n} \n\nexport default customer;","const displayTotal = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_DISPLAY':\n      return action.payload;\n    case 'CLEAR_INFO':\n          return []\n    default:\n      return state;\n  }\n}\n\nexport default displayTotal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n// import reducers\nimport selectedPizzas from './components/redux/reducers/selectedPizzas.reducer';\nimport customer from './components/redux/reducers/customer.reducer';\nimport displayTotal from './components/redux/reducers/displayTotal.reducer';\n\nconst storeInstance = createStore(\n    combineReducers({ \n        selectedPizzas,\n        displayTotal,\n        customer\n    }),\n    applyMiddleware(logger)\n)\n\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}